<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: left;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
}
.echarts {
  width: 750rpx;
  height: 900rpx;
}
</style>
<template>
  <view class="container">
    <view class="userinfo" @tap="handleViewTap">
      <button class="zan-btn zan-btn--primary" 
      type="primary" open-type="getUserInfo" 
      bindgetuserinfo="bindGetUserInfo" 
      wx:if="{{!userInfo.nickName}}">开启游戏</button>
      <image class="userinfo-avatar" 
      src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
      <view> Day 1</view>
    </view>

    <toast />
    <view class="echarts">
      <!-- <echarts :ec.sync="ec" :canvasId.sync="canvasId"/> -->
      <candlestick />
    </view>
    <!-- <view>{{ec.onInit}}</view> -->
  </view>
</template>

<script>
import wepy from 'wepy'
import Panel from '@/components/panel' // alias example
import Candlestick from '@/components/candlestick' // alias example
import Toast from 'wepy-com-toast'
import testMixin from '../mixins/test'
// import Echarts from '../ec-canvas/ec-echarts'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '币圈梭哈王'
  };
  components = {
    panel: Panel,
    toast: Toast,
    candlestick: Candlestick
  };

  mixins = [testMixin];

  data = {
    mynum: 20,
    userInfo: {},
    count: 0,
    netrst: ''
  };

  computed = {
    now() {
      return +new Date()
    }
  };

  methods = {
    plus() {
      this.mynum++
    },
    toast() {
      let promise = this.$invoke('toast', 'show', {
        title: '自定义标题',
        img:
          'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      })

      promise.then(d => {
        console.log('toast done')
      })
    },
    bindGetUserInfo(userInfoObj) {
      console.log(userInfoObj)
      const { detail } = userInfoObj
      const { userInfo } = detail
      this.userInfo = userInfo
    },
    counterEmit(...args) {
      let $event = args[args.length - 1]
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      )
    }
  };

  events = {
    'index-emit': (...args) => {
      let $event = args[args.length - 1]
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      )
    }
  };

  onLoad() {
    let self = this
    this.$parent.getUserInfo(function(userInfo) {
      if (userInfo) {
        this.userInfo = userInfo
      }
      self.normalTitle = '标题已被修改'

      self.setTimeoutTitle = '标题三秒后会被修改'
      setTimeout(() => {
        self.setTimeoutTitle = '到三秒了'
        self.$apply()
      }, 3000)

      self.$apply()
    })
  }
}
</script>
